package code{		import code.*;		import com.adobe.nativeExtensions.*;	import com.doitflash.air.extensions.sms.SMS;	import com.doitflash.air.extensions.sms.SMSEvent;		import flash.display.MovieClip;	import flash.display.SimpleButton;	import flash.display.Sprite;	import flash.display.StageQuality;	import flash.display.StageScaleMode;	import flash.events.Event;	import flash.events.EventDispatcher;	import flash.events.KeyboardEvent;	import flash.events.MouseEvent;	import flash.events.TimerEvent;	import flash.events.TouchEvent;	import flash.events.TransformGestureEvent;	import flash.system.Capabilities;	import flash.ui.Multitouch;	import flash.ui.MultitouchInputMode;	import flash.utils.Timer;		import net.hires.debug.Stats;	//import com.bit101.components.Label;			public class Main extends MovieClip	{				private var _ex:SMS; // set Extension var				private var _smsArray:Array = [];		private var _conversationArray:Array = [];						public static var master:Boolean=false;		//if(Capabilities.cpuArchitecture=="ARM") //x86 = ordi, ARM = tablette				if(Capabilities.cpuArchitecture=="x86") master = true;else master = false; //si c'est l'ordi ? a desactiver pour tester les tablettes sur ordi laptop					/// classes		public var _reseau:reseau=new reseau();				public var osManage:osManager = new osManager();			//var _vibrate:Vibration = new Vibration();								// boutons		public var debug_btn:SimpleButton;		public var menu_btn:SimpleButton;						public var go_btn:SimpleButton;		public var full_btn:SimpleButton;		public var cache:MovieClip;				Multitouch.inputMode = MultitouchInputMode.GESTURE; 						//objets				 				public function Main()		{			addEventListener(Event.ADDED_TO_STAGE, stageAddHandler);			super();							}				var send:Boolean;		public function stageAddHandler(e:Event):void		{						removeEventListener(Event.ADDED_TO_STAGE, stageAddHandler);					//	stage.addEventListener(MouseEvent.MOUSE_UP, compteur);						_ex = new SMS();			_ex.addEventListener(SMSEvent.NEW_RECEIVED_SMS, receivedSMS);			//var send:Boolean = _ex.sendSms("0684356428", "++++Hi SMS test2", "15");												/// ecouteurs boutons			go_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);			full_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);						menu_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);			debug_btn.addEventListener(MouseEvent.MOUSE_DOWN, ClickHandler);									//	if (master)	stage.addEventListener(TransformGestureEvent.GESTURE_PAN , onPan); 			//stage.addEventListener (TransformGestureEvent.GESTURE_SWIPE, fl_SwipeHandler);			//if (!master) stage.addEventListener(MouseEvent.MOUSE_UP, ClickHandler);						showmenu(true);					//	cache=new Cache();		//	this.addChildat (cache, O);			//cache.x = -10;			//cache.y = -10;						// ajouts des classes systemes			this.addChildAt(_reseau, 0);			this.addChild(osManage);			_reseau.visible=true;						stage.quality = StageQuality.LOW;									function showmenu(disp:Boolean){			//lesBoutons.visible=disp;			debug_btn.visible=disp;					}				// SI ON VEUX TOUT RECUPERER DU TELEPHONE		/*		if (_smsArray.length == 0) 		{			_reseau.log("roule ma poul");			_ex.addEventListener(SMSEvent.ALL_SMS, allSms);			_ex.addEventListener(SMSEvent.NEW_PERIOD_SMS, allSmsPeriod);			_ex.allSms();		}		_smsArray = _ex.smsArray;		_conversationArray = _ex.conversationArray;				//send = _ex.sendSms("0684356428", "++++Hi SMS test2", "15");		*/										}						var blacklist : Array =[];					 		 		 		 		 		 private function allSms(e:SMSEvent):void		 {			 _ex.removeEventListener(SMSEvent.ALL_SMS, allSms);			 _ex.removeEventListener(SMSEvent.NEW_PERIOD_SMS, allSmsPeriod);			 _smsArray = e.param;			 _conversationArray = _ex.conversation(8);			 _reseau.log("received all SMS");			 			 for (var i:int = 0; i < _smsArray.length; i++) 			 {				 var obj:Object = _smsArray[i];				 //C.log("id: ", obj.id, "type: ", obj.type, "numConversation: ", obj.numConversation, "address: ", obj.address, "date: ", obj.date, "body: ", obj.body);				// obj.date /// ici la date aussi !				// _reseau.log("body "+ obj.body);								 _reseau.sender("body "+ obj.body);				 _reseau.sender("/date/ "+ obj.date);				 _reseau.sender("/num/"+ obj.address);							 }		 }		 		 private function allSmsPeriod(e:SMSEvent):void		 {			 var arr:Array = e.param;		 }		 		 		 		 		 		 		 		 		 		private function receivedSMS(e:SMSEvent):void		{						var arrayString:String=e.param; 			var obj:Object = e.param;							_reseau.log("receivedSMS >>"+ e.param);						var newArray:Array= arrayString.split('","')  			var body=String(newArray[0])				body = body.substr(9, body.length-1);					var numArray:Array= newArray[1].split("\"}");			var num = String(numArray[0].substr(11));//						body = body.split("\,").join("");			body = body.split("\\").join("");			body = body.split("\/").join("");						var grosmots : Array = [				{gm:"bit", repl :"bott"},				{gm:"put", repl :"@&#"},				{gm:" cul", repl :" derrière"},				{gm:"encul", repl :"@&#*"},				{gm:"foutre", repl :"@*&#$"},				{gm:"salau", repl :"@&#$!"},				{gm:"salop", repl :"@&#$!"},				{gm:"couille", repl :"classe"},				{gm:" con ", repl :" @&#$! "},				{gm:" conne ", repl :"@&#$! "},				{gm:" cone ", repl :" cônifère "},				{gm:"merde", repl :"@&#$!"},				{gm:"baise", repl :"****"},				{gm:"suce", repl :"saupoudre"},				{gm:" leche", repl :"saupoudre"},				{gm:" lèche", repl :"saupoudre"},				{gm:"nichon", repl :"@&#$!"},				{gm:"sex", repl :"s**"},				{gm:"chate", repl :"c***e"},				{gm:"chatte", repl :"c***e"},				{gm:"pd", repl :"**"},				{gm:"ntm", repl :"&#$!"},				{gm:"nique", repl :"&#$!"},			]								var gromot:Boolean;				var banni:Boolean;							for (var i:int=0; i<grosmots.length;i++){				var bodytmp:String = body.toLowerCase();				if ( bodytmp.indexOf(grosmots[i].gm)!=-1) {					body = bodytmp;					body = body.split(grosmots[i].gm).join(grosmots[i].repl);					gromot=true				}			}			for (i=0;i<blacklist.length;i++){				if (num == blacklist[i]) banni = true;			}						if (banni) {				send = _ex.sendSms(num, "Vous êtes malheuseusment banni", "15");				banni = false;			}else if (body.length>80) {				//send = _ex.sendSms(num, "Vous avez envoyé plus de 80 caractères \n c'est un peu trop", "15");			}else if (gromot){					//send = _ex.sendSms(num, "Le message a été filtré. \n Veillez à ne pas envoyer ce type de message s'il vous plait", "15");				//	send = _ex.sendSms(num, ".. bof ... ", "15");								_reseau.sender("body "+ body);					_reseau.sender("/num/"+ num);					//gromot=false;			}else{				_reseau.sender("body "+ body);				_reseau.sender("/num/"+ num);				if (!gromot){				var reponse : int = int(Math.random()*7);				/*if (reponse ==0) send = _ex.sendSms(num, "ok !", "15");					if (reponse ==1) send = _ex.sendSms(num, "c'est envoyé !", "15");					if (reponse ==2) send = _ex.sendSms(num, "c'est parti", "15");					if (reponse ==3) send = _ex.sendSms(num, "hop!", "15");					if (reponse ==4) send = _ex.sendSms(num, "ça s'affiche", "15");					if (reponse ==5) send = _ex.sendSms(num, "bien reçu", "15");					if (reponse ==6) send = _ex.sendSms(num, "tu es sûr d'envoyer ça ?", "15");					*/				}			}			gromot = false;			//_reseau.sender(e.param); olschool					}																var variable:String;	var id:int;	var id2:int;	var id3:int;	var valeur1:Number;	var valeur2:Number;	var valeurC:uint			public function recoit(recu: String):void		{						var body:Array= recu.split("/") 						 id = recu.indexOf("/");		 if (body[0] == "avert") {			 send = _ex.sendSms(body[1], body[2], "15");				 //Sauteur._create(body[1]);		 }		 if (body[0] == "bann") {			 blacklist.push(body[1]);			 send = _ex.sendSms(body[1], "vous êtes malheureusement mis en blacklist", "15");				 //Sauteur._create(body[1]);		 }				 		 		if (id>0) variable = recu.substr(0, id);		else variable = recu;						/////				//////////////////////		if (variable == "full") _reseau.sender("gofull") //relai du master vers max		if (variable == "prefull") _reseau.sender("prefull") //relai du master vers max		if (variable == "annul") _reseau.sender("annul") //relai du master vers max		if (variable == "ouvreporte") _reseau.sender("ouvreporte") //relai du master vers max							if (variable == "coordVerApp2")			{				id2 = recu.indexOf("y");				valeur1 = int(recu.substr(id+1, id2-id-1));//*2;				valeur2 = int(recu.substr(id2+1))+350;				cache.play();// = valeur1;				MovieClip(this.root).nextScene();			//	ant_btn.y = valeur2;				//verApp2.DrawPath( valeur1, valeur2 );			}				if (variable == "stopVerApp2") {				id2 = recu.indexOf("b");				id3 = recu.indexOf("c");				valeur1 = int(recu.substr(id+1, id2-id-1))+2//*2;				valeur2 = int(recu.substr(id2+1, id3-id2-1));//-15;				valeurC = uint(recu.substr(id3+1));				//verApp2.DrawEnd(valeur1, valeur2, valeurC);			}							if (variable == "coordFourmies")		{						id2 = recu.indexOf("y");			id3 = recu.indexOf("a");			var id4:Number = recu.indexOf("b");			var id5:Number = recu.indexOf("g");			valeur1 = int(recu.substr(id+1, id2-id-1))//*2;			valeur2 = int(recu.substr(id2+1, id3-id2-1))+490;			var valeur3:Number = int(recu.substr(id3+1, id4-id3-1))//*2;			var valeur4:Number = int(recu.substr(id4+1, id5-id4-1));			var valeur5:Number = Number(recu.substr(id5+1));			//ants.add( valeur1, valeur2,valeur3, valeur4, valeur5);		}								}		///////////    ///////	/////		///////						function showmenu(disp:Boolean){			//lesBoutons.visible=disp;			debug_btn.visible=disp;					//pisson_btn.visible=disp;			//shark_btn.visible=disp;					}						public function ClickHandler(event:MouseEvent):void		{				switch( event.target )			{												case debug_btn:					if (_reseau.visible==true){						_reseau.visible=false;					}else{_reseau.visible=true;					}					break;								case menu_btn:					if (debug_btn.visible==true){						showmenu(false);					}else{						showmenu(true);					}					break;												case go_btn :					_reseau.sender("ouvreporte")					break;								case full_btn :					_reseau.sender("full")					break;			}								}			}			}